# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: testing

on:
  push:
    branches: [ "master" ]
    paths:
      - "src/**"
  pull_request:
    branches: [ "master" ]
    paths:
      - "src/**"
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Test API
        run: mvn clean install
      - name: Build with Maven
        run: mvn -B package --file pom.xml

  sonar:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: mvn clean verify sonar:sonar -Dsonar.token=a376e729db9c2138ebebfa715b19ee4d1b38d324 -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=blou5 -Dsonar.projectKey=blou5_ConferenceAppBE-master
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=blou5_ConferenceAppBE-master -Psonar

  deploy-to-dev:
    needs: sonar
    name: deploy to dev
    runs-on: ubuntu-latest
    if: github.event_name  == "push"
    environment: dev
    steps:
      - name: Print if deployed successfully
        run: echo "success"

#  docker:
#    needs: [sonar,build]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#        with:
#          driver-opts: |
#            image=moby/buildkit:v0.12.0
#          buildkitd-flags: --debug
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: Dockerfile
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
#          push: true
#          tags: blou5/gsd:latest
#
